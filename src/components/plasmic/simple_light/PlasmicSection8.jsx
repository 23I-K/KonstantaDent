// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: bGhfLbpuPrsnLdpUo1t3d
// Component: 9lYi5fZQnJ
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import YandexMaps from "../../YandexMaps"; // plasmic-import: i6uwCB2O_K/component
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_simple_light.module.css"; // plasmic-import: bGhfLbpuPrsnLdpUo1t3d/projectcss
import * as sty from "./PlasmicSection8.module.css"; // plasmic-import: 9lYi5fZQnJ/css
import Tooth4Greysvg2Icon from "./icons/PlasmicIcon__Tooth4Greysvg2"; // plasmic-import: vpNuNhTOSj/icon
import WhatsappIconsvgIcon from "./icons/PlasmicIcon__WhatsappIconsvg"; // plasmic-import: _jnN_Vm8gz/icon
import _132PxInstagramLogo2016SvgIcon from "./icons/PlasmicIcon___132PxInstagramLogo2016Svg"; // plasmic-import: fA1NfzzTaN/icon
import FacebookFIconsvgIcon from "./icons/PlasmicIcon__FacebookFIconsvg"; // plasmic-import: b6flz5NzWd/icon
import TelegramLogosvgIcon from "./icons/PlasmicIcon__TelegramLogosvg"; // plasmic-import: NUeYhRydXf/icon
import yandexIconpngRvzTmyxs2 from "./images/yandexIconpng.png"; // plasmic-import: rvzTMYXS2/picture
import googleMaps2020Iconsvg4JzMArvTom from "./images/googleMaps2020Iconsvg.svg"; // plasmic-import: 4JzMArvTOM/picture
import _2GispngTjl3MsAc from "./images/_2Gispng.png"; // plasmic-import: TJL-3MsAC/picture

export const PlasmicSection8__VariantProps = new Array();

export const PlasmicSection8__ArgProps = new Array();

function PlasmicSection8__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <div className={classNames(defaultcss.all, sty.box__u42Z8)}>
        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(defaultcss.all, sty.box__ykj6W)}
        >
          <a
            data-plasmic-name={"link"}
            data-plasmic-override={overrides.link}
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.link
            )}
            tabIndex={undefined}
            name={'contacts'}
          >
            {"Контактная информация"}
          </a>

          <Tooth4Greysvg2Icon
            className={classNames(defaultcss.all, sty.svg___5Sqcb)}
            role={"img"}
          />
        </p.Stack>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.box__pi7Ta
          )}
        >
          {"Мы всегда рады Вас видеть!"}
        </div>
      </div>

      <YandexMaps
        data-plasmic-name={"yandexMaps"}
        data-plasmic-override={overrides.yandexMaps}
        className={classNames("__wab_instance", sty.yandexMaps)}
      />

      <div className={classNames(defaultcss.all, sty.box___82G46)}>
        <div className={classNames(defaultcss.all, sty.box__qAwMd)}>
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.box__gfJ9Q
            )}
          >
            {"г. Москва, г. Троицк, Октябрьский проспект 23-А"}
          </div>

          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.box__bCpmY
            )}
          >
            {"Режим работы: Пн-Вс с 9:00 до 18:00"}
          </div>
        </div>

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(defaultcss.all, sty.box__gq0TZ)}
        >
          <WhatsappIconsvgIcon
            className={classNames(defaultcss.all, sty.svg__azwgQ)}
            role={"img"}
          />

          <_132PxInstagramLogo2016SvgIcon
            className={classNames(defaultcss.all, sty.svg__mshuz)}
            role={"img"}
          />

          <FacebookFIconsvgIcon
            className={classNames(defaultcss.all, sty.svg___2QRuR)}
            role={"img"}
          />

          <TelegramLogosvgIcon
            className={classNames(defaultcss.all, sty.svg___8VrEe)}
            role={"img"}
          />
        </p.Stack>
      </div>

      <div className={classNames(defaultcss.all, sty.box___36RWb)}>
        <div className={classNames(defaultcss.all, sty.box__qpBz5)}>
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.box__tBb6
            )}
          >
            {"8(499)-399-35-09"}
          </div>

          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.box__yv85W
            )}
          >
            {"8(977)-105-45-55"}
          </div>
        </div>

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(defaultcss.all, sty.box___8LdgG)}
        >
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.box___5LCs)}
          >
            <img
              alt={""}
              className={classNames(defaultcss.img, sty.img__c2Nsn)}
              role={"img"}
              src={yandexIconpngRvzTmyxs2}
            />

            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box__jaUdd
              )}
            >
              {"Яндекс.Карты"}
            </div>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.box__fbZp3)}
          >
            <img
              alt={""}
              className={classNames(defaultcss.img, sty.img__ld5Pi)}
              role={"img"}
              src={googleMaps2020Iconsvg4JzMArvTom}
            />

            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box__b9NFj
              )}
            >
              {"Карты Google"}
            </div>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.box__fxb5R)}
          >
            <img
              alt={""}
              className={classNames(defaultcss.img, sty.img__kDkoB)}
              role={"img"}
              src={_2GispngTjl3MsAc}
            />

            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box__akuhP
              )}
            >
              {"2 gis"}
            </div>
          </p.Stack>
        </p.Stack>
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: ["root", "link", "yandexMaps"],
  link: ["link"],
  yandexMaps: ["yandexMaps"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicSection8__ArgProps,
      internalVariantPropNames: PlasmicSection8__VariantProps
    });

    return PlasmicSection8__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSection8";
  } else {
    func.displayName = `PlasmicSection8.${nodeName}`;
  }
  return func;
}

export const PlasmicSection8 = Object.assign(
  // Top-level PlasmicSection8 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    link: makeNodeComponent("link"),
    yandexMaps: makeNodeComponent("yandexMaps"),
    // Metadata about props expected for PlasmicSection8
    internalVariantProps: PlasmicSection8__VariantProps,
    internalArgProps: PlasmicSection8__ArgProps
  }
);

export default PlasmicSection8;
/* prettier-ignore-end */
