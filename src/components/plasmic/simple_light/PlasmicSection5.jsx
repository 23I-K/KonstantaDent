// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: bGhfLbpuPrsnLdpUo1t3d
// Component: eiKdH07AQ2
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_simple_light.module.css"; // plasmic-import: bGhfLbpuPrsnLdpUo1t3d/projectcss
import * as sty from "./PlasmicSection5.module.css"; // plasmic-import: eiKdH07AQ2/css
import BrightStarssvgIcon from "./icons/PlasmicIcon__BrightStarssvg"; // plasmic-import: L2ax5rhXMz/icon
import doctorAboutPhotojpgKiXArtGm from "./images/doctorAboutPhotojpg.jpeg"; // plasmic-import: kiXArt_GM/picture

export const PlasmicSection5__VariantProps = new Array();

export const PlasmicSection5__ArgProps = new Array();

function PlasmicSection5__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <div className={classNames(defaultcss.all, sty.box__sAtfW)}>
        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(defaultcss.all, sty.box__wuDQt)}
        >
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.box__mPy1T
            )}
          >
            {"О клинике"}
          </div>

          <BrightStarssvgIcon
            data-plasmic-name={"svg"}
            data-plasmic-override={overrides.svg}
            className={classNames(defaultcss.all, sty.svg)}
            role={"img"}
          />
        </p.Stack>

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(defaultcss.all, sty.box___0B3Ha)}
        >
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.box__oRulC
            )}
          >
            {
              "«Константа Дентал» — это большая мечта детства, которая благодаря упорному труду и непрерывному профессиональному развитию превратилась в небольшую семейную стоматологическую клинику. Еще в детстве благодаря моей маме, которая была стоматологом, я решила посвятить свою жизнь врачебному делу. \n\nПосле окончания медицинского университета и нескольких лет работы в разных клиниках, у меня появились постоянные пациенты —  и в 2004 году я решила открыть свой кабинет с одним креслом. Со временем пациентов стало слишком много, поэтому я собрала команду специалистов и основала свою клинику.\n\nНа данный момент в нашей стоматологии 3 кабинета, более     10 высококвалифицированных специалистов, мощное инновационное диагностическое и лечебное оборудование и самое главное — внимание и забота о здоровье каждого из вас». "
            }
          </div>

          <div className={classNames(defaultcss.all, sty.box__aqZG)}>
            <img
              data-plasmic-name={"img"}
              data-plasmic-override={overrides.img}
              alt={""}
              className={classNames(defaultcss.img, sty.img)}
              role={"img"}
              src={doctorAboutPhotojpgKiXArtGm}
            />

            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box__tooEt
              )}
            >
              {
                "Гуманенко Татьяна Владимировна, основательница «Константа Дентал» и врач-стоматолог"
              }
            </div>
          </div>
        </p.Stack>
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: ["root", "svg", "img"],
  svg: ["svg"],
  img: ["img"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicSection5__ArgProps,
      internalVariantPropNames: PlasmicSection5__VariantProps
    });

    return PlasmicSection5__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSection5";
  } else {
    func.displayName = `PlasmicSection5.${nodeName}`;
  }
  return func;
}

export const PlasmicSection5 = Object.assign(
  // Top-level PlasmicSection5 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    svg: makeNodeComponent("svg"),
    img: makeNodeComponent("img"),
    // Metadata about props expected for PlasmicSection5
    internalVariantProps: PlasmicSection5__VariantProps,
    internalArgProps: PlasmicSection5__ArgProps
  }
);

export default PlasmicSection5;
/* prettier-ignore-end */
