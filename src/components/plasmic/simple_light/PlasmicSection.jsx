// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: bGhfLbpuPrsnLdpUo1t3d
// Component: u59lQpZjhY09
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_simple_light.module.css"; // plasmic-import: bGhfLbpuPrsnLdpUo1t3d/projectcss
import * as sty from "./PlasmicSection.module.css"; // plasmic-import: u59lQpZjhY09/css
import PlaceholdersvgIcon from "./icons/PlasmicIcon__Placeholdersvg"; // plasmic-import: 2GRi3ydkEi/icon
import doctorWritingpngYwUw2Apnx from "./images/doctorWritingpng.png"; // plasmic-import: ywUW2apnx/picture
import tooth4GreysvgIbnzTrBWv from "./images/tooth4Greysvg.svg"; // plasmic-import: IBNZTrB_WV/picture

export const PlasmicSection__VariantProps = new Array();

export const PlasmicSection__ArgProps = new Array(
  "title",
  "subtitleMain",
  "subtitle"
);

function PlasmicSection__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <div className={classNames(defaultcss.all, sty.box__yiF2T)}>
        <p.PlasmicSlot
          defaultContents={
            "Trusted by over 20,000 companies all over the world"
          }
          value={args.title}
          className={classNames(sty.slotTitle)}
        />

        <p.PlasmicSlot
          defaultContents={"Enter some text"}
          value={args.subtitleMain}
        />

        <p.PlasmicSlot
          defaultContents={"Enter some text"}
          value={args.subtitle}
        />
      </div>

      <div className={classNames(defaultcss.all, sty.box__u0WJe)}>
        <img
          alt={""}
          className={classNames(defaultcss.img, sty.img__nf5L)}
          role={"img"}
          src={doctorWritingpngYwUw2Apnx}
        />

        <ul
          data-plasmic-name={"ul"}
          data-plasmic-override={overrides.ul}
          className={classNames(defaultcss.ul, sty.ul)}
        >
          <li className={classNames(defaultcss.li, sty.li__k4On)}>
            <div className={classNames(defaultcss.all, sty.box__b2Aog)}>
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.box___3CAd
                )}
              >
                {"Мы - стоматологическая клиника"}
              </div>

              <a
                data-plasmic-name={"link"}
                data-plasmic-override={overrides.link}
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.link
                )}
                href={"#contacts"}
              >
                {" в Троицке"}
              </a>
            </div>

            <PlaceholdersvgIcon
              data-plasmic-name={"svg"}
              data-plasmic-override={overrides.svg}
              className={classNames(defaultcss.all, sty.svg)}
              role={"img"}
            />
          </li>

          <li
            className={classNames(
              defaultcss.li,
              defaultcss.__wab_text,
              sty.li__kFtN
            )}
          >
            {"Современное уникальное оборудование"}
          </li>

          <li
            className={classNames(
              defaultcss.li,
              defaultcss.__wab_text,
              sty.li__k3Gma
            )}
          >
            {"3 кабинета"}
          </li>

          <li
            className={classNames(
              defaultcss.li,
              defaultcss.__wab_text,
              sty.li__e2AqG
            )}
          >
            {"Работаем с 2004 года"}
          </li>
        </ul>
      </div>

      <img
        alt={""}
        className={classNames(defaultcss.img, sty.img__bz5Zg)}
        role={"img"}
        src={tooth4GreysvgIbnzTrBWv}
      />
    </p.Stack>
  );
}

const PlasmicDescendants = {
  root: ["root", "ul", "link", "svg"],
  ul: ["ul", "link", "svg"],
  link: ["link"],
  svg: ["svg"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicSection__ArgProps,
      internalVariantPropNames: PlasmicSection__VariantProps
    });

    return PlasmicSection__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSection";
  } else {
    func.displayName = `PlasmicSection.${nodeName}`;
  }
  return func;
}

export const PlasmicSection = Object.assign(
  // Top-level PlasmicSection renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    ul: makeNodeComponent("ul"),
    link: makeNodeComponent("link"),
    svg: makeNodeComponent("svg"),
    // Metadata about props expected for PlasmicSection
    internalVariantProps: PlasmicSection__VariantProps,
    internalArgProps: PlasmicSection__ArgProps
  }
);

export default PlasmicSection;
/* prettier-ignore-end */
