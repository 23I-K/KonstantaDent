// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: rRiHBMbiCNZ6Mp9qsJpkyN
// Component: qe2_ntIZdwjxj
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import YandexMaps from "../../YandexMaps"; // plasmic-import: lV8cBegov1BaA/component
import { useScreenVariants } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: ds0rkJllqclQf/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_copy_of_simple_light.module.css"; // plasmic-import: rRiHBMbiCNZ6Mp9qsJpkyN/projectcss
import * as sty from "./PlasmicSection8.module.css"; // plasmic-import: qe2_ntIZdwjxj/css
import Tooth4Greysvg2Icon from "./icons/PlasmicIcon__Tooth4Greysvg2"; // plasmic-import: YjsKtpKjYwdSo/icon
import WhatsappIconsvgIcon from "./icons/PlasmicIcon__WhatsappIconsvg"; // plasmic-import: QR7H3lXEy8eLv/icon
import _132PxInstagramLogo2016SvgIcon from "./icons/PlasmicIcon___132PxInstagramLogo2016Svg"; // plasmic-import: BZqvvW_W32fls/icon
import FacebookFIconsvgIcon from "./icons/PlasmicIcon__FacebookFIconsvg"; // plasmic-import: 1SKw4bJmgaQcy/icon
import TelegramLogosvgIcon from "./icons/PlasmicIcon__TelegramLogosvg"; // plasmic-import: OqonYBsJaMhOg/icon
import yandexIconpngEAKhhKmrO48I7 from "./images/yandexIconpng.png"; // plasmic-import: eAKhhKmrO48i7/picture
import googleMaps2020IconsvgJtVEd0R669Nd from "./images/googleMaps2020Iconsvg.svg"; // plasmic-import: JtVEd0_r669ND/picture
import _2GispngKUv0XXiViLqV9 from "./images/_2Gispng.png"; // plasmic-import: kUv0xXIViLqV9/picture

export const PlasmicSection8__VariantProps = new Array();

export const PlasmicSection8__ArgProps = new Array();

function PlasmicSection8__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants()
  });

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <p.Stack
        as={"div"}
        hasGap={hasVariant(globalVariants, "screen", "mobile") ? true : false}
        className={classNames(defaultcss.all, sty.box__iCfSe)}
      >
        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(defaultcss.all, sty.box__cKgDn)}
        >
          <a
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.link__l8R7E
            )}
            tabIndex={undefined}
          >
            {"Контактная информация"}
          </a>

          <Tooth4Greysvg2Icon
            className={classNames(defaultcss.all, sty.svg__mv92P)}
            role={"img"}
          />
        </p.Stack>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.box__pfBjM
          )}
        >
          {"Мы всегда рады Вас видеть!"}
        </div>
      </p.Stack>

      <YandexMaps
        data-plasmic-name={"yandexMaps"}
        data-plasmic-override={overrides.yandexMaps}
        className={classNames("__wab_instance", sty.yandexMaps)}
      />

      <p.Stack
        as={"div"}
        hasGap={hasVariant(globalVariants, "screen", "mobile") ? true : false}
        className={classNames(defaultcss.all, sty.box__jZucu)}
      >
        <div className={classNames(defaultcss.all, sty.box___4DjZu)}>
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.box__g3Xpo
            )}
          >
            {"г. Москва, г. Троицк, Октябрьский проспект 23-А"}
          </div>

          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.box__lGWrD
            )}
          >
            {"Режим работы: Пн-Вс с 9:00 до 18:00"}
          </div>
        </div>

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(defaultcss.all, sty.box___1QkF7)}
        >
          <a
            className={classNames(defaultcss.all, sty.link__wb0CQ)}
            href={"https://wa.me/+79771054555"}
          >
            <WhatsappIconsvgIcon
              className={classNames(defaultcss.all, sty.svg__u5IJd)}
              role={"img"}
            />
          </a>

          <a
            className={classNames(defaultcss.all, sty.link___3CJoN)}
            href={"https://instagram.com/konstanta.dental?igshid=1y0nxsj3yut5n"}
          >
            <_132PxInstagramLogo2016SvgIcon
              className={classNames(defaultcss.all, sty.svg__nZayM)}
              role={"img"}
            />
          </a>

          <a
            className={classNames(defaultcss.all, sty.link___784Rw)}
            href={"https://www.facebook.com/konstantadental/"}
          >
            <FacebookFIconsvgIcon
              className={classNames(defaultcss.all, sty.svg___7Tnnb)}
              role={"img"}
            />
          </a>

          <a
            className={classNames(defaultcss.all, sty.link___6L8W)}
            href={" t.me/+79771054555"}
          >
            <TelegramLogosvgIcon
              className={classNames(defaultcss.all, sty.svg___0Sbur)}
              role={"img"}
            />
          </a>
        </p.Stack>
      </p.Stack>

      <p.Stack
        as={"div"}
        hasGap={hasVariant(globalVariants, "screen", "mobile") ? true : false}
        className={classNames(defaultcss.all, sty.box__lmdGv)}
      >
        <a
          className={classNames(defaultcss.all, sty.link__jTlw6)}
          href={"tel:+79771054555"}
        >
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.box__ju15F
            )}
          >
            {"+7(977) 105 45-55"}
          </div>
        </a>

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(defaultcss.all, sty.box__qQ6Ti)}
        >
          <p.Stack
            as={"a"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.link__fgwa3)}
            href={
              "https://yandex.ru/maps/org/konstanta_dental/207987218439/?ll=37.300564%2C55.478607&z=17.78"
            }
          >
            <img
              alt={""}
              className={classNames(defaultcss.img, sty.img__qstDe)}
              role={"img"}
              src={yandexIconpngEAKhhKmrO48I7}
            />

            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box__q5M6V
              )}
            >
              {"Яндекс.Карты"}
            </div>
          </p.Stack>

          <p.Stack
            as={"a"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.link__yMxro)}
            href={
              "https://www.google.ru/maps/place/%D0%9A%D0%BE%D0%BD%D1%81%D1%82%D0%B0%D0%BD%D1%82%D0%B0+%D0%94%D0%B5%D0%BD%D1%82%D0%B0%D0%BB/@55.478719,37.2966802,17z/data=!3m1!4b1!4m5!3m4!1s0x4135554e10754115:0x44ac441c13a462a!8m2!3d55.478716!4d37.2988689"
            }
          >
            <img
              alt={""}
              className={classNames(defaultcss.img, sty.img__xa3Ab)}
              role={"img"}
              src={googleMaps2020IconsvgJtVEd0R669Nd}
            />

            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box__jQ32
              )}
            >
              {"Карты Google"}
            </div>
          </p.Stack>

          <p.Stack
            as={"a"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.link___0FVvD)}
            href={
              "https://2gis.ru/moscow/firm/70000001007009088?m=37.299858%2C55.4788%2F18.13"
            }
          >
            <img
              alt={""}
              className={classNames(defaultcss.img, sty.img__e6NXj)}
              role={"img"}
              src={_2GispngKUv0XXiViLqV9}
            />

            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box__zEywX
              )}
            >
              {"2 gis"}
            </div>
          </p.Stack>
        </p.Stack>
      </p.Stack>
    </div>
  );
}

const PlasmicDescendants = {
  root: ["root", "yandexMaps"],
  yandexMaps: ["yandexMaps"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicSection8__ArgProps,
      internalVariantPropNames: PlasmicSection8__VariantProps
    });

    return PlasmicSection8__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSection8";
  } else {
    func.displayName = `PlasmicSection8.${nodeName}`;
  }
  return func;
}

export const PlasmicSection8 = Object.assign(
  // Top-level PlasmicSection8 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    yandexMaps: makeNodeComponent("yandexMaps"),
    // Metadata about props expected for PlasmicSection8
    internalVariantProps: PlasmicSection8__VariantProps,
    internalArgProps: PlasmicSection8__ArgProps
  }
);

export default PlasmicSection8;
/* prettier-ignore-end */
