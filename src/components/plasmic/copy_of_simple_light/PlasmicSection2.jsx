// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: rRiHBMbiCNZ6Mp9qsJpkyN
// Component: U2TqGD1uPogLe
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_copy_of_simple_light.module.css"; // plasmic-import: rRiHBMbiCNZ6Mp9qsJpkyN/projectcss
import * as sty from "./PlasmicSection2.module.css"; // plasmic-import: U2TqGD1uPogLe/css
import ToothWhiteningBlacksvgIcon from "./icons/PlasmicIcon__ToothWhiteningBlacksvg"; // plasmic-import: PXMpwjhztkarF/icon
import _2DoctorpngXvk8NXcrNqgDi from "./images/_2Doctorpng.png"; // plasmic-import: XVK8NXcrNqgDI/picture
import _1DoctorpngM3NHmsc5P4Y7 from "./images/_1Doctorpng.png"; // plasmic-import: M_3NHmsc5p4y7/picture
import _3DoctorpngUqnnx4VtCz4N from "./images/_3Doctorpng.png"; // plasmic-import: Uqnnx4Vt_Cz4N/picture

export const PlasmicSection2__VariantProps = new Array();

export const PlasmicSection2__ArgProps = new Array();

function PlasmicSection2__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <div className={classNames(defaultcss.all, sty.box__d0P8J)}>
        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(defaultcss.all, sty.box__mMzJ)}
        >
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.box__hS7L0
            )}
          >
            {"Наша команда специалистов"}
          </div>

          <ToothWhiteningBlacksvgIcon
            data-plasmic-name={"svg"}
            data-plasmic-override={overrides.svg}
            className={classNames(defaultcss.all, sty.svg)}
            role={"img"}
          />
        </p.Stack>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.box__vcfQ6
          )}
        >
          {
            "Наши врачи регулярно обучаются и повышают уровень своего мастерства на международных симпозиумах и конференциях в разных странах, в том числе – в США, Германии, Чехии, Австрии и других странах. В своей работе мы используем самые актуальные разработки российских и зарубежных стоматологов, доказавшие свою эффективность в ходе тысяч клинических исследований."
          }
        </div>
      </div>

      <p.Stack
        as={"div"}
        hasGap={true}
        className={classNames(defaultcss.all, sty.box___6Nrb)}
      >
        <img
          alt={""}
          className={classNames(defaultcss.img, sty.img___8ZNz)}
          role={"img"}
          src={_2DoctorpngXvk8NXcrNqgDi}
        />

        <img
          alt={""}
          className={classNames(defaultcss.img, sty.img__qbIeP)}
          role={"img"}
          src={_1DoctorpngM3NHmsc5P4Y7}
        />

        <img
          alt={""}
          className={classNames(defaultcss.img, sty.img___8TIa)}
          role={"img"}
          src={_3DoctorpngUqnnx4VtCz4N}
        />

        <img
          alt={""}
          className={classNames(defaultcss.img, sty.img__zTgLc)}
          role={"img"}
          src={_2DoctorpngXvk8NXcrNqgDi}
        />
      </p.Stack>

      <p.Stack
        as={"div"}
        hasGap={true}
        className={classNames(defaultcss.all, sty.box__dAdxQ)}
      >
        <img
          alt={""}
          className={classNames(defaultcss.img, sty.img__g5P2A)}
          role={"img"}
          src={_1DoctorpngM3NHmsc5P4Y7}
        />

        <img
          alt={""}
          className={classNames(defaultcss.img, sty.img__jdCho)}
          role={"img"}
          src={_3DoctorpngUqnnx4VtCz4N}
        />

        <img
          alt={""}
          className={classNames(defaultcss.img, sty.img__zYa7I)}
          role={"img"}
          src={_2DoctorpngXvk8NXcrNqgDi}
        />
      </p.Stack>
    </div>
  );
}

const PlasmicDescendants = {
  root: ["root", "svg"],
  svg: ["svg"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicSection2__ArgProps,
      internalVariantPropNames: PlasmicSection2__VariantProps
    });

    return PlasmicSection2__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSection2";
  } else {
    func.displayName = `PlasmicSection2.${nodeName}`;
  }
  return func;
}

export const PlasmicSection2 = Object.assign(
  // Top-level PlasmicSection2 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    svg: makeNodeComponent("svg"),
    // Metadata about props expected for PlasmicSection2
    internalVariantProps: PlasmicSection2__VariantProps,
    internalArgProps: PlasmicSection2__ArgProps
  }
);

export default PlasmicSection2;
/* prettier-ignore-end */
